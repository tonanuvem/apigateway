version: '3.4'

networks: 
  kong-net:
  keycloak-net:

volumes:
  kong-datastore:
  keycloak-datastore:

services:
  #######################################
  # Postgres: database do Kong
  #######################################
  kong-db:
    image: postgres:9.6
    volumes:
      - kong-datastore:/var/lib/postgresql/data
    networks:
      - kong-net
    #ports:
    #  - "5432:5432"
    environment:
      POSTGRES_DB:       kong
      POSTGRES_USER:     kong
      POSTGRES_PASSWORD: kong
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 5s
      timeout: 5s
      retries: 5

  #######################################
  # Kong migration : preparar o banco de dados
  #######################################
  kong-migration:
    #image: kong
    #image: kong:1.5
    build: 
      context: .
      dockerfile: ./Dockerfile
    command: "kong migrations bootstrap"
    networks:
      - kong-net
    restart: on-failure
    environment:
      KONG_PG_HOST:     kong-db
      KONG_PG_PASSWORD: kong
    links:
      - kong-db
    depends_on:
      - kong-db

  #######################################
  # Kong: API Gateway
  #######################################
  kong:
    #image: kong
    #image: kong:1.5
    build: 
      context: .
      dockerfile: ./Dockerfile
    restart: always
    networks:
      - kong-net
    environment:
#      KONG_DATABASE:         postgres
#      KONG_PG_HOST:          kong-db
#      KONG_PG_PORT:          5432
#      KONG_PG_DATABASE:      kong   
      KONG_PG_HOST: kong-db
      KONG_PG_PASSWORD: kong
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_PROXY_LISTEN_SSL: 0.0.0.0:8443
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
#      KONG_PROXY_LISTEN:     0.0.0.0:8000, 0.0.0.0:8443 ssl
#      KONG_ADMIN_LISTEN:     0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_PLUGINS: bundled,oidc
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG:  /dev/stderr
      KONG_ADMIN_ERROR_LOG:  /dev/stderr
    depends_on:
      - kong-db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://kong:8001"]
      interval: 5s
      timeout: 2s
      retries: 15
    ports:
      - "8000:8000" # Listener
      - "8001:8001" # Admin API
      - "8443:8443" # Listener  (SSL)
      - "8444:8444" # Admin API (SSL)
#    extra_hosts:
#      - "keycloak-host:keycloak"
      

  #######################################
  # KONGA: UI para o Kong
  #######################################
  konga:
    image: pantsel/konga
    restart: always
    networks:
      - kong-net
    environment:
      TOKEN_SECRET: fiaptoken
    depends_on:
      - kong
    healthcheck:
      test: ["CMD", "curl", "-f", "http://kong:8001"]
      interval: 5s
      timeout: 2s
      retries: 15
    ports:
      - "31337:1337"


  #######################################
  # Postgres: database do Keycloak
  #######################################
  keycloak-db:
    image: postgres:9.6
    volumes: 
      - keycloak-datastore:/var/lib/postgresql/data
    networks:
      - keycloak-net
    #ports:
    #  - "25432:5432"
    environment:
      POSTGRES_DB:       keycloak
      POSTGRES_USER:     keycloak
      POSTGRES_PASSWORD: keycloak
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "keycloak"]
      interval: 5s
      timeout: 5s
      retries: 5

  #######################################
  # Keycloak : gest√£o de identidades
  #######################################
  keycloak:
    image: jboss/keycloak:4.5.0.Final
    depends_on:
      - keycloak-db
    networks:
      - keycloak-net
    ports:
      - "8180:8080"
    environment:
      DB_VENDOR:   POSTGRES
      DB_ADDR:     keycloak-db
      DB_PORT:     5432
      DB_DATABASE: keycloak
      DB_USER:     keycloak
      DB_PASSWORD: keycloak
      KEYCLOAK_USER:     admin
      KEYCLOAK_PASSWORD: admin
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://keycloak:8180"]
      interval: 5s
      timeout: 2s
      retries: 15
#    command:
#        - /bin/sh
#        - -c
#        - |
#          keycloak/bin/kcadm.sh config credentials --server http://localhost:8080/auth --realm master --user admin --password admin
#          keycloak/bin/kcadm.sh update realms/master -s sslRequired=NONE --user admin --password admin
#          /opt/jboss/tools/docker-entrypoint.sh


